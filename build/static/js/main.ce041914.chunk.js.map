{"version":3,"sources":["redux/scheduler/reducer.js","redux/scheduler/scheduler.js","pages/scheduler/addorupdate.js","pages/scheduler/schduletable.js","pages/scheduler/scheduler.js","App.js","serviceWorker.js","index.js"],"names":["list_initial","store","window","localStorage","schedulerContext","React","createContext","useSelector","createSelectorHook","useDispatch","createDispatchHook","schedulerStore","createStoreHook","createStore","state","action","console","log","newstate","type","data","i","length","startDateTime","splice","JSON","parse","getItem","setItem","stringify","SchedulerContext","children","context","AddOrRemove","intialformvalue","isupdate","schedulerDispatch","Container","onSubmit","formdata","actionType","initialValues","render","handleSubmit","form","values","submitting","Grid","container","alignContent","spacing","item","sm","name","disabled","fullWidth","defaultValue","value","label","component","TextField","hidden","endDateTime","required","mobile","Button","onClick","change","variant","color","useStyles","makeStyles","table","minWidth","tableRow","padding","tableCell","border","fontSize","SchedulerTable","props","lb","Date","now","ub","setMonth","getMonth","useState","formIntialValue","setFormIntialValue","isUpdate","setIsUpdate","open","setOpen","month","getFullYear","year","setYear","scheduler","OptionSelectMonthDays","CreateTable","lowerBoundDateTime","upperBoundDateTime","clickCallBack","day","time","cellState","datetime","setFullYear","setHours","setMinutes","setSeconds","setMilliseconds","getTime","Dialog","onClose","months","years","push","nowyear","Paper","style","verticalAlign","Select","native","onChange","e","target","align","dataToMatrix","days","getDate","daysInMonth","matrix","setDate","row","j","startThisMonth","endThisMonth","x","start","end","shour","getHours","sday","ehour","eday","classes","colormaping","TableContainer","Table","className","size","aria-label","TableHead","TableRow","TableCell","TableBody","map","index","cell","index2","key","backgroundColor","Scheduler","useRouteMatch","path","url","exact","App","theme","createMuiTheme","mixins","toolbar","minHeight","typography","ThemeProvider","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ce041914.chunk.js","sourcesContent":["const list_initial=[]\r\nconst store=window.localStorage\r\n\r\nexport function Reducer(state=list_initial,action){\r\n    console.log(state)\r\n    let newstate=[...state]\r\n    switch(action.type){\r\n        case \"ADD\":\r\n            newstate=[...state,action.data]\r\n            break\r\n        case \"UPDATE\":\r\n            for(let i=0;i<newstate.length;i++){\r\n                if(newstate[i].startDateTime==action.data.startDateTime){\r\n                    newstate[i]=action.data\r\n                }\r\n            }\r\n            break\r\n        case \"DELETE\":\r\n            for(let i=0;i<newstate.length;i++){\r\n                if(newstate[i].startDateTime==action.data.startDateTime){\r\n                    newstate.splice(i, 1)\r\n                }\r\n            }\r\n            break\r\n        default:\r\n            return JSON.parse(store.getItem('schedules')) || list_initial\r\n            \r\n    }\r\n    store.setItem('schedules', JSON.stringify(newstate))\r\n    return newstate\r\n}","import React from 'react'\r\nimport { createDispatchHook, createSelectorHook, createStoreHook, Provider } from \"react-redux\"\r\nimport { createStore } from \"redux\"\r\nimport { Reducer } from './reducer'\r\n\r\nexport const schedulerContext = React.createContext({})\r\nexport const useSelector = createSelectorHook(schedulerContext)\r\nexport const useDispatch = createDispatchHook(schedulerContext)\r\nexport const useStore = createStoreHook(schedulerContext)\r\n\r\nconst schedulerStore = createStore(Reducer)\r\n\r\nexport function SchedulerContext({children}){\r\n    return(\r\n        <Provider store = {schedulerStore} context = {schedulerContext}>\r\n            {children}\r\n        </Provider>\r\n    )\r\n}\r\n","import { Button, Container, Grid } from '@material-ui/core';\r\nimport { TextField } from 'final-form-material-ui';\r\nimport React from 'react';\r\nimport { Field, Form } from 'react-final-form';\r\nimport { useDispatch } from '../../redux/scheduler/scheduler';\r\n\r\nexport function AddOrRemove({intialformvalue,isupdate}){\r\n    const schedulerDispatch=useDispatch()\r\n    function onSubmit(formdata){\r\n        if(formdata.actionType!='cancel'){\r\n            delete formdata.actionType\r\n            if(!isupdate)\r\n                schedulerDispatch({type:\"ADD\",data:formdata})\r\n            else\r\n                schedulerDispatch({type:\"UPDATE\",data:formdata})\r\n        }else{\r\n            schedulerDispatch({type:\"DELETE\",data:formdata})\r\n        }\r\n    }\r\n    return(\r\n        <Container>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                initialValues={intialformvalue}\r\n                render={({handleSubmit,form,submitting,values})=>(\r\n                    <form onSubmit={handleSubmit}>\r\n                        <br/>\r\n                        <Grid container alignContent='space-between' spacing={2}>\r\n                        <Grid item sm={12}>\r\n                            <Field name='startDateTime' disabled fullWidth={true} defaultValue={'ddd'} value={values.startDateTime}  label='Date and Time' component={TextField}/>\r\n                        </Grid>\r\n                            <Field name='endDateTime' hidden value={values.endDateTime} component='input' />\r\n                        <Grid item sm={12}>\r\n                            <Field name='name' fullWidth={true} label='Name' required value={values.name} component={TextField}/>\r\n                        </Grid>\r\n                        <Grid item sm={12}>\r\n                            <Field name='mobile'  fullWidth={true} label='Mobile Number' required value={values.mobile} component={TextField}/>\r\n                        </Grid>\r\n                        <Grid item sm={12}>\r\n                            <Button type='submit' onClick={()=>form.change('actionType','add')} variant='contained' color='primary' name='submit'>{isupdate?'Update':'Add' }</Button>\r\n                            <span> </span>\r\n                            {\r\n                                isupdate && <Button type='delete' onClick={()=>form.change('actionType','cancel')} variant='contained' color='secondary' name='cancel'>Cancel</Button>\r\n                            }\r\n                        </Grid>\r\n                        </Grid>\r\n                        <br/>\r\n                    </form>\r\n                )}\r\n            />\r\n        </Container>\r\n    )\r\n}","import { Container, Dialog, makeStyles, Paper, Select, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from '../../redux/scheduler/scheduler';\r\nimport { AddOrRemove } from './addorupdate';\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    tableRow:{\r\n        padding:\"5px\",\r\n        \r\n    },\r\n    tableCell:{\r\n        padding:\"5px\",\r\n        border:'1px black solid',\r\n        fontSize:'.6em'\r\n    }\r\n    \r\n    \r\n  });\r\n\r\n\r\nexport function SchedulerTable(props){\r\n    const lb=new Date(Date.now())\r\n    const ub=new Date(Date.now())\r\n    ub.setMonth(ub.getMonth()+3)\r\n    const [formIntialValue, setFormIntialValue] = useState({})\r\n    const [isUpdate, setIsUpdate] = useState(false)\r\n    \r\n    const [open, setOpen] = useState(true)\r\n    const [month, setMonth] = useState(lb.getMonth())\r\n    const [year, setYear] = useState(lb.getFullYear())\r\n    const scheduler = useSelector((data)=>{return data})\r\n    //time is 0-23\r\n    //cell state is above explain as for color\r\n    //day as 1-31 or what ever as per month\r\n    function clickCallBack(year,month,day,time,cellState){\r\n        const datetime=new Date()\r\n        datetime.setFullYear(year,month,day)\r\n        datetime.setHours(time)\r\n        datetime.setMinutes(0)\r\n        datetime.setSeconds(0)\r\n        datetime.setMilliseconds(0)\r\n        if(cellState==1){\r\n            console.log(scheduler)\r\n            for(let i=0;i<scheduler.length;i++){\r\n                //start scheduler.startDateTime is unix time eoch\r\n                if(scheduler[i].startDateTime.getTime()===datetime.getTime())\r\n                {\r\n                    setIsUpdate(true)\r\n                    setFormIntialValue(scheduler[i])\r\n                    setOpen(true)\r\n                    break\r\n                }\r\n            }\r\n        }else if(cellState==0){\r\n            setIsUpdate(false)\r\n            setFormIntialValue({startDateTime:datetime,endDateTime:datetime})\r\n            setOpen(true)\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <Container>        \r\n            <OptionSelectMonthDays setMonth={setMonth} setYear={setYear} month={month} year={year} />\r\n            <CreateTable data={scheduler} lowerBoundDateTime={lb} upperBoundDateTime={ub} month={month} year={year} clickCallBack={clickCallBack} />\r\n            <Dialog open={open} onClose={()=>setOpen(false)}>\r\n                <AddOrRemove intialformvalue={formIntialValue} isupdate={isUpdate}/>\r\n            </Dialog>\r\n            <br/>\r\n            <br/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction OptionSelectMonthDays({year,month,setYear,setMonth}){\r\n    let months=[],years=[]\r\n    for(let i=0;i<12;i++)\r\n        months.push(<option value={i} >{i+1}</option>)\r\n    const nowyear=new Date(Date.now()).getFullYear()\r\n    for(let i=nowyear-2;i<=nowyear+2;i++)\r\n        years.push(<option value={i}>{i}</option>)\r\n\r\n    return(\r\n        <>\r\n        <br/>\r\n        <Container component={Paper} style={{padding:'5px 5px',verticalAlign:'center'}}>\r\n            <label>Month: </label>\r\n            <Select native defaultValue={month} onChange={(e)=>setMonth(e.target.value)} align='center'>\r\n                {months}\r\n            </Select>\r\n            <label>Year: </label>\r\n            <Select native defaultValue={year} onChange={(e)=>{setYear(e.target.value)}} align='center'>\r\n                {years}\r\n            </Select>\r\n        </Container>\r\n        <br/>\r\n        </>\r\n    );\r\n}\r\nfunction daysInMonth (month, year) {\r\n    return new Date(year, month+1, 0).getDate();\r\n}\r\n// if days \r\n// 0=avilable\r\n// 1= booked\r\n// 2=out of bound\r\n\r\nfunction dataToMatrix(data,month,year,lowerBoundDateTime,upperBoundDateTime){\r\n    const days=daysInMonth(month,year)\r\n    let matrix=[]\r\n    let datetime= new Date()\r\n    datetime.setFullYear(year,month,1)\r\n    datetime.setHours(0)\r\n    datetime.setMinutes(0)\r\n    datetime.setSeconds(0)\r\n    datetime.setMilliseconds(0)\r\n    \r\n    // set matrix  according to upper and lower bound of date as 0=available and 2= out of bound\r\n    for(var i=1;i<=days;i++){\r\n        datetime.setDate(i)\r\n        let row=[]\r\n        for(var j=0;j<24;j++){\r\n            datetime.setHours(j)\r\n            if(datetime>=lowerBoundDateTime && datetime<=upperBoundDateTime){\r\n                row.push(0)\r\n            }\r\n            else{\r\n                row.push(2)\r\n            }\r\n        }\r\n        matrix.push(row)\r\n    }\r\n    // integer value of start and last \r\n    let startThisMonth=new Date()\r\n    startThisMonth.setFullYear(year,month,1)\r\n    startThisMonth.setHours(0)\r\n    startThisMonth.setMinutes(0)\r\n    startThisMonth.setSeconds(0)\r\n    startThisMonth.setMilliseconds(0)\r\n\r\n    let endThisMonth=new Date()\r\n    endThisMonth.setFullYear(year,month,days)\r\n    endThisMonth.setHours(23)\r\n    endThisMonth.setMinutes(59)\r\n    endThisMonth.setSeconds(59)\r\n    endThisMonth.setMilliseconds(999)\r\n    // update matrix for already a schduled date and time\r\n    for(let  i in data){\r\n        const x=data[i]    \r\n        x.startDateTime=new Date(x.startDateTime)\r\n        x.endDateTime=new Date(x.endDateTime)\r\n        //if either starting or end date exist in the current month\r\n        if((x.startDateTime>=startThisMonth && x.startDateTime<=endThisMonth) || (x.endDateTime>=startThisMonth && x.endDateTime<=endThisMonth)){\r\n            let start=x.startDateTime\r\n            let end=x.endDateTime\r\n            //if starting date is even before of this month than start with date 1/xx/xxxx\r\n            if(x.startDateTime<startThisMonth)\r\n                start=startThisMonth\r\n            //if end date is even after of this month than end with date (31/28/29/30)/xx/xxxx\r\n            if(x.endDateTime>endThisMonth)\r\n                end=endThisMonth\r\n            const shour=start.getHours()\r\n            const sday=start.getDate()\r\n\r\n            const ehour=end.getHours()\r\n            const eday=end.getDate()\r\n            \r\n            for(i=sday;i<=eday;i++){\r\n                for(j = (sday==i?shour:0);j<= (eday==i?ehour:23);j++){\r\n                    matrix[i-1][j]=1\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return matrix\r\n}\r\n// 0=avilable\r\n// 1= booked\r\n// 2=out of bound\r\nfunction CreateTable({data,month,year,lowerBoundDateTime,upperBoundDateTime,clickCallBack=console.log}){\r\n    const matrix=dataToMatrix(data,month,year,lowerBoundDateTime,upperBoundDateTime)\r\n    const classes = useStyles();\r\n    const colormaping=['white','red','#eeeeee']\r\n    return(\r\n        <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"scheduler\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.tableCell} align=\"right\">Date</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">12AM-1AM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">1AM-2AM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">2AM-3AM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">3AM-4AM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">4AM-5AM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">5AM-6AM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">6AM-7AM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">7AM-8AM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">8AM-9AM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">9AM-10AM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">10AM-11AM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">11AM-12PM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">12PM-1PM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">1PM-2PM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">2PM-3PM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">3PM-4PM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">4PM-5PM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">5PM-6PM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">6PM-7PM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">7PM-8PM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">8PM-9PM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">9PM-10PM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">10PM-11PM</TableCell>\r\n            <TableCell className={classes.tableCell} align=\"right\">11PM-12AM</TableCell>\r\n            \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {matrix.map((row,index) => (\r\n            <TableRow>\r\n            \r\n            <TableCell className={classes.tableCell} align='center' >{index+1}</TableCell>\r\n            {row.map((cell,index2)=>(\r\n                <TableCell key={index2} onClick={()=>clickCallBack(year,month,index+1,index2,cell)} style={{backgroundColor: colormaping[cell]}} className={classes.tableCell}></TableCell>    \r\n            ))}\r\n          </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport { AddOrRemove } from './addorupdate';\r\nimport { SchedulerTable } from './schduletable';\r\n\r\nexport function Scheduler(){\r\n    const {path,url}=useRouteMatch()\r\n    return(\r\n            <Switch>\r\n                <Route exact path={`${path}/`}>\r\n                    <SchedulerTable/>\r\n                </Route>\r\n               <Route exact path={`${path}/scheduletable`}>\r\n                    <AddOrRemove/>\r\n                </Route>\r\n            </Switch>   \r\n    \r\n        );\r\n}","import { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport { Scheduler } from './pages/scheduler/scheduler';\r\nimport { SchedulerContext } from './redux/scheduler/scheduler';\r\n\r\nfunction App() {\r\n  const {path}=useRouteMatch()\r\n  const theme = createMuiTheme({\r\n    spacing:8,\r\n    mixins:{\r\n      toolbar:{\r\n        minHeight: 35\r\n        }\r\n     },\r\n     typography:{\r\n       fontSize:14,\r\n     }\r\n    })\r\n\r\n  return (\r\n  <ThemeProvider theme={theme}>\r\n  <SchedulerContext>\r\n    <Switch>\r\n      <Route path={`${path}`}>\r\n        <Scheduler/>\r\n      </Route>\r\n    </Switch>\r\n  </SchedulerContext>\r\n  </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}